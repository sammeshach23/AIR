**Step 1: Install ROS and TurtleBot Packages**
sudo apt-get update
sudo apt-get install ros-noetic-turtlebot3 ros-noetic-turtlebot3-simulations

**Step 2: Set Up Environment Variables**
echo "export TURTLEBOT3_MODEL=burger" >> ~/.bashrc
source ~/.bashrc

**Step 3: Download the URDF File**
cd ~/catkin_ws/src
git clone https://github.com/ROBOTIS-GIT/turtlebot3.git

**Step 4: Open the URDF in Gazebo**
roslaunch turtlebot3_gazebo turtlebot3_empty_world.launch

Launch the TurtleBot in a predefined world (e.g., TurtleBot3 World):
roslaunch turtlebot3_gazebo turtlebot3_world.launch

**Step 5: Control the TurtleBot in Gazebo**
roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch

**Step 6: Visualization in RViz (Optional)**
roslaunch turtlebot3_gazebo turtlebot3_gazebo_rviz.launch

**LiDAR Mapping**

1.TurtleBot3 Packages: Make sure the TurtleBot3 packages are installed. You can install them using:

sudo apt-get install ros-noetic-turtlebot3 ros-noetic-turtlebot3-simulations


2.First, define the TurtleBot3 model you're using. In the terminal, set the environment variable:

export TURTLEBOT3_MODEL=burger


3.First, define the TurtleBot3 model you're using. In the terminal, set the environment variable:

roslaunch turtlebot3_gazebo turtlebot3_world.launch



4.For LiDAR-based mapping, use the slam_gmapping package:

roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping


5.You can control the TurtleBot3 manually to explore the environment using teleop:
Use the keyboard to move the robot around. As the TurtleBot3 moves, the SLAM algorithm will generate a map based on the LiDAR data.

roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch


6.To visualize the map in real-time, you can use rviz:

roslaunch turtlebot3_slam turtlebot3_slam.launch